<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="detail">

	<select id="selectCafe_BasicInfo" resultType="vo.CafeVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectCafeRate" resultType="vo.CafeRateVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_rate
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectViewCafeImage" resultType="vo.CafeImageVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_image
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectViewCafeReview" resultType="vo.ReviewVO" parameterType="hashmap">
		SELECT * FROM hdw9413.review 
		<where>   
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
		order by regdate desc limit #{beginIndex}, 5 
	</select>
	<select id="viewMyReview2" resultType="vo.ReviewVO" parameterType="vo.ReviewVO">
		SELECT * FROM hdw9413.review 
		<where>   
		
			<if test="cafe_id != null and user_id != null">
				cafe_id = #{cafe_id} and user_id = #{user_id} 
			</if>
		</where>
	</select>
	<select id="selectViewUserList" resultType="vo.UserVO" parameterType="Integer">
		SELECT * FROM hdw9413.user
		<where>
			<if test="cafe_id != null">
				user_id = #{user_id}
			</if>
		</where>
	</select>
	<select id="selectViewMenu" resultType="vo.CafeMenuVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_menu
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectViewProduct" resultType="vo.CafeProductVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_product
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectViewService" resultType="vo.CafeServiceVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_service
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="selectViewFacilities" resultType="vo.CafeFacilitiesVO" parameterType="Integer">
		SELECT * FROM hdw9413.cafe_facilities
		<where>
			<if test="cafe_id != null">
				cafe_id = #{cafe_id}
			</if>
		</where>
	</select>
	<select id="viewLikeCafe" resultType="vo.LikeCafeVO" parameterType="Map">
		SELECT * FROM hdw9413.like_cafe
		<where>
			<if test="cafe_id != null and user_id != null">
				cafe_id = #{cafe_id} and user_id = #{user_id} 
			</if>
		</where>
	</select>
	<select id="viewCollectCafe" resultType="vo.CollectCafeVO" parameterType="Map">
		SELECT * FROM hdw9413.collect_cafe
		<where>
			<if test="cafe_id != null and user_id != null">
				cafe_id = #{cafe_id} and user_id = #{user_id} 
			</if>
		</where>
	</select>   
	<select id="checkManager" resultType="Integer" parameterType="Integer">
		SELECT cafe_id FROM hdw9413.cafe
		<where>
			<if test="user_id != null">
				manager_id = #{user_id}
			</if>
		</where>
	</select>     
	
	
	<!-- 등록 -->
	
	<update id="insertCafe" parameterType="vo.CafeVO">  
		update hdw9413.cafe set
		time_day=#{time_day}, time_start=#{time_start} , time_end=#{time_end}
		<where>
			<if test="cafe_id != null">
				cafe_id=#{cafe_id}			
			</if>
		</where>
	</update>
	<insert id="insertCafeImage" parameterType="vo.CafeImageVO">  
		insert into hdw9413.cafe_image
		(cafe_id, url)
		values
		(#{cafe_id}, #{url})
	</insert>
	<insert id="insertFacility" parameterType="vo.CafeFacilitiesVO">  
		insert into hdw9413.cafe_facilities
		(cafe_id, wifi, tables, interior, music, plug, restroom, studyroom, terrace, smoking, parking, wifi_text, tables_text, interior_text, music_text, plug_text, restroom_text, studyroom_text, terrace_text, smoking_text, parking_text)
		values
		(#{cafe_id}, #{wifi}, #{tables}, #{interior}, #{music}, #{plug}, #{restroom}, #{studyroom}, #{terrace}, #{smoking}, #{parking}, #{wifi_text}, #{tables_text}, #{interior_text}, #{music_text}, #{plug_text}, #{restroom_text}, #{studyroom_text}, #{terrace_text}, #{smoking_text}, #{parking_text})
	</insert>
	<insert id="insertService" parameterType="vo.CafeServiceVO">  
		insert into hdw9413.cafe_service
		(cafe_id, event, coupon, mileage, blanket, drinkrefill)
		values
		(#{cafe_id}, #{event}, #{coupon}, #{mileage}, #{blanket}, #{drinkrefill})
	</insert>
	<insert id="insertMenu" parameterType="vo.CafeMenuVO">  
		insert into hdw9413.cafe_menu
		(cafe_id, name, price, image, type)
		values
		(#{cafe_id}, #{name}, #{price},	#{image}, #{type})
	</insert>
	<insert id="insertProduct" parameterType="vo.CafeProductVO">  
		insert into hdw9413.cafe_product
		(cafe_id, name, price, image, type)
		values
		(#{cafe_id}, #{name}, #{price}, #{image}, #{type})
	</insert>
	
	
	
	<!-- 수정 -->
	
	<update id="updateCafeImage" parameterType="vo.CafeImageVO">  
		update hdw9413.cafe_image set
		url=#{url}
		<where>
			<if test="cafe_image_id != null">
				cafe_image_id=#{cafe_image_id}			
			</if>
		</where>
	</update>
	<update id="updateCafe" parameterType="vo.CafeVO">  
		update hdw9413.cafe set
		time_day=#{time_day}, time_start=#{time_start}, time_end=#{time_end} 
		<where>
			<if test="cafe_id != null">
				cafe_id=#{cafe_id}			
			</if>
		</where>
	</update>   
	<update id="updateFacility" parameterType="vo.CafeFacilitiesVO">  
		update hdw9413.cafe_facilities set
		wifi=#{wifi}, tables=#{tables}, interior=#{interior}, 
		music=#{music}, plug=#{plug}, restroom=#{restroom}, 
		studyroom=#{studyroom}, terrace=#{terrace}, 
		smoking=#{smoking}, parking=#{parking}, 
		wifi_text=#{wifi_text}, tables_text=#{tables_text}, 
		interior_text=#{interior_text}, music_text=#{music_text}, 
		plug_text=#{plug_text}, restroom_text=#{restroom_text}, 
		studyroom_text=#{studyroom_text}, terrace_text=#{terrace_text}, 
		smoking_text=#{smoking_text}, parking_text=#{parking_text} 
		<where>     
			<if test="cafe_id != null">
				cafe_id=#{cafe_id}			
			</if>
		</where>
	</update>
	<update id="updateService" parameterType="vo.CafeServiceVO">  
		update hdw9413.cafe_service set
		event=#{event}, coupon=#{coupon}, mileage=#{mileage}, 
		blanket=#{blanket}, drinkrefill=#{drinkrefill}
		<where>
			<if test="cafe_id != null">
				cafe_id=#{cafe_id}			
			</if>
		</where>
	</update>
	<update id="updateMenu" parameterType="vo.CafeMenuVO">  
		update hdw9413.cafe_menu set
		name=#{name}, price=#{price}, image=#{image}, type=#{type}
		<where>
			<if test="cafe_menu_id != null">
				cafe_menu_id=#{cafe_menu_id}			
			</if>
		</where>
	</update>
	<update id="updateProduct" parameterType="vo.CafeProductVO">  
		update hdw9413.cafe_product set
		name=#{name}, price=#{price}, image=#{image}, type=#{type}
		<where>
			<if test="cafe_product_id != null">
				cafe_product_id=#{cafe_product_id}			
			</if>
		</where>
	</update>
	
	
	<!-- 삭제(정보 초기화)  -->  
	<update id="deleteCafe" parameterType="vo.CafeVO">  
		update hdw9413.cafe set
		time_day=NULL, time_start=NULL, time_end=NULL 
		<where>
			<if test="cafe_id != null">
				cafe_id=#{cafe_id}			
			</if>
		</where>
	</update>
	
	<delete id="deleteCafeImage" parameterType="Integer">
		DELETE FROM hdw9413.cafe_image WHERE cafe_id=#{cafe_id}
	</delete>
	
	<delete id="deleteCafeImageByKey" parameterType="Integer">
		DELETE FROM hdw9413.cafe_image WHERE cafe_image_id=#{cafe_image_id}
	</delete>
	
	<delete id="deleteFacility" parameterType="Integer"> 
		DELETE FROM hdw9413.cafe_facilities WHERE cafe_id=#{cafe_id}
	</delete>
	
	<delete id="deleteService" parameterType="Integer">
		DELETE FROM hdw9413.cafe_service WHERE cafe_id=#{cafe_id}
	</delete>
	
	<delete id="deleteProduct" parameterType="Integer">
		DELETE FROM hdw9413.cafe_product WHERE cafe_id=#{cafe_id}
	</delete>
	
	<delete id="deleteCafeProductByKey" parameterType="Integer">
		DELETE FROM hdw9413.cafe_image WHERE cafe_image_id=#{cafe_product_id}
	</delete>
	
	<delete id="deleteMenu" parameterType="Integer">
		DELETE FROM hdw9413.cafe_menu WHERE cafe_id=#{cafe_id}
	</delete>  
	
	<delete id="deleteCafeMenuByKey" parameterType="Integer">
		DELETE FROM hdw9413.cafe_image WHERE cafe_image_id=#{cafe_menu_id}
	</delete>
	
	<insert id="insertReview" parameterType="vo.ReviewVO">  
		insert into hdw9413.review
		(user_id, cafe_id, regdate, contents, taste_score, price_score, service_score, wifi_score, mood_score, clean_score, image, score_avg)
		values
		(#{user_id}, #{cafe_id}, now(), #{contents}, #{taste_score}, #{price_score}, #{service_score}, #{wifi_score}, #{mood_score}, #{clean_score}, #{image}, #{score_avg})
	</insert>
	<update id="updateReview" parameterType="vo.ReviewVO">  
		update hdw9413.review set
		regdate=now(), contents=#{contents}, 
		taste_score=#{taste_score}, price_score=#{price_score}, service_score=#{service_score}, 
		wifi_score=#{wifi_score}, mood_score=#{mood_score}, clean_score=#{clean_score}, image=#{image}
		<where>
			<if test="review_id != null" >
				review_id = #{review_id}
			</if>
		</where>   
	</update>   
	<update id="updateRate" parameterType="vo.CafeRateVO">
		update hdw9413.cafe_rate set
		rate_num=#{rate_num}, cafe_total_avg=#{cafe_total_avg},  
		taste_sum=#{taste_sum}, price_sum=#{price_sum}, service_sum=#{service_sum}, wifi_sum=#{wifi_sum}, mood_sum=#{mood_sum}, clean_sum=#{clean_sum}, 
		taste_avg=#{taste_avg}, price_avg=#{price_avg}, service_avg=#{service_avg}, wifi_avg=#{wifi_avg}, mood_avg=#{mood_avg}, clean_avg=#{clean_avg}
		<where>
			<if test="cafe_id != null" >
				cafe_id = #{cafe_id}
			</if>
		</where>
	</update>   
	<update id="updateRateToCafe" parameterType="vo.CafeRateVO">
		update hdw9413.cafe set
		review_num=#{rate_num}, rate_avg = #{cafe_total_avg}  
		<where>
			<if test="cafe_id != null" >
				cafe_id = #{cafe_id}
			</if>
		</where>
	</update>      
	<insert id="insertRate" parameterType="vo.CafeRateVO">   
		insert into hdw9413.cafe_rate
		(rate_num, cafe_id, cafe_total_avg, 
		taste_sum, price_sum, service_sum, wifi_sum, mood_sum, clean_sum, 
		taste_avg, price_avg, service_avg, wifi_avg, mood_avg, clean_avg)
		values
		(#{rate_num}, #{cafe_id}, #{cafe_total_avg},
		#{taste_sum}, #{price_sum}, #{service_sum}, #{wifi_sum}, #{mood_sum}, #{clean_sum}, 
		#{taste_avg}, #{price_avg}, #{service_avg}, #{wifi_avg}, #{mood_avg}, #{clean_avg})
		
	</insert>   
	<delete id="deleteReview" parameterType="vo.ReviewVO">
		DELETE FROM hdw9413.review WHERE cafe_id=#{cafe_id} and user_id=#{user_id}
	</delete>  
	<select id="viewReview" resultType="vo.ReviewVO" parameterType="vo.ReviewVO">
		SELECT * FROM hdw9413.review
		<where>
			<if test="user_id != null and cafe_id != null" >
				cafe_id = #{cafe_id} and user_id = #{user_id}
			</if>
		</where>
	</select>
	
	<!-- 좋아요 등록 -->
	<insert id="registLike" parameterType="vo.LikeCafeVO">  
		insert into hdw9413.like_cafe
		(user_id, cafe_id)
		values
		(#{user_id}, #{cafe_id})
	</insert>   
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="vo.LikeCafeVO">  
		DELETE FROM hdw9413.like_cafe WHERE cafe_id=#{cafe_id} and user_id=#{user_id}
	</delete>
	
	<!-- 찜 등록 -->
	<insert id="registCollect" parameterType="vo.CollectCafeVO">  
		insert into hdw9413.collect_cafe
		(user_id, cafe_id)
		values
		(#{user_id}, #{cafe_id})
	</insert>
	
	<!-- 찜 삭제 -->
	<delete id="deleteCollect" parameterType="vo.CollectCafeVO">  
		DELETE FROM hdw9413.collect_cafe WHERE cafe_id=#{cafe_id} and user_id=#{user_id}
	</delete>
	
	
<!-- 
	 <insert id="insertMember" parameterType="test.TestVO">
		INSERT INTO spring5fs.member
		(email, password, name, regdate, profile, introduce)
		values
		(#{email}, #{password}, #{name}, now(), #{profile}, #{introduce})
	</insert>
	
	<select id="memberDetail" parameterType="Integer" resultType="test.TestVO">
		SELECT * FROM spring5fs.member WHERE id=#{id}
	</select>
	
	<update id="updateMember" parameterType="test.TestVO">
		UPDATE spring5fs.member SET
		email=#{email}, password=#{password}, name=#{name}, introduce=#{introduce}
		<if test="profile != null">
			, profile=#{profile}
		</if>
		WHERE id= #{id}
	</update>
	
	<delete id="deleteMember" parameterType="Integer">
		DELETE FROM spring5fs.member WHERE id=#{id}
	</delete>
	
	<select id="loginCheck" parameterType="java.util.HashMap" resultType="test.TestVO">
		SELECT * FROM spring5fs.member WHERE email=#{mail} AND password=#{pwd}
	</select>  -->
	
</mapper>